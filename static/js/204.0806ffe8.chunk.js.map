{"version":3,"sources":["../node_modules/prismjs/components/prism-jsdoc.js"],"names":["Prism","javascript","languages","type","source","parameterPrefix","jsdoc","extend","pattern","RegExp","lookbehind","inside","insertBefore","alias","replace","string","number","boolean","typescript","keyword","javadoclike","addSupport"],"mappings":"kIAAA,SAAWA,GACT,IAAIC,EAAaD,EAAME,UAAUD,WAC7BE,EAAO,qCAAqCC,OAC5CC,EAAkB,2CAA6CF,EAAO,UAC1EH,EAAME,UAAUI,MAAQN,EAAME,UAAUK,OAAO,cAAe,CAC5D,UAAa,CAEXC,QAASC,OAAOJ,EAAkB,6BAA6BD,QAC/DM,YAAY,EACZC,OAAQ,CACN,YAAe,SAIrBX,EAAME,UAAUU,aAAa,QAAS,UAAW,CAC/C,qBAAsB,CAEpBJ,QAASC,OAAOJ,EAAkB,8CAA8CD,QAChFM,YAAY,EACZC,OAAQ,CACN,UAAa,CACXH,QAAS,2BACTE,YAAY,EACZC,OAAQ,CACN,YAAe,OAGnB,KAAQ,CACNH,QAAS,oBACTE,YAAY,EACZC,OAAQV,EACRY,MAAO,uBAET,YAAe,WAGnB,aAAc,CAAC,CACbL,QAASC,OAAO,mHAAmHL,OAAOU,QAAQ,WAAW,WAC3J,OAAOX,MAETO,YAAY,EACZC,OAAQ,CACN,YAAe,OAEhB,CACDH,QAASC,OAAO,gBAAkBN,GAClCO,YAAY,EACZC,OAAQ,CACN,OAAUV,EAAWc,OACrB,OAAUd,EAAWe,OACrB,QAAWf,EAAWgB,QACtB,QAAWjB,EAAME,UAAUgB,WAAWC,QACtC,SAAY,oBACZ,YAAe,qBAGnB,QAAW,CACTX,QAAS,mDACTE,YAAY,EACZC,OAAQ,CACN,KAAQ,CACNH,QAAS,uBACTE,YAAY,EACZC,OAAQV,EACRY,MAAO,2BAKfb,EAAME,UAAUkB,YAAYC,WAAW,aAAcrB,EAAME,UAAUI,OArEvE,CAsEGN","file":"static/js/204.0806ffe8.chunk.js","sourcesContent":["(function (Prism) {\n  var javascript = Prism.languages.javascript;\n  var type = /{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}/.source;\n  var parameterPrefix = '(@(?:param|arg|argument|property)\\\\s+(?:' + type + '\\\\s+)?)';\n  Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n    'parameter': {\n      // @param {string} foo - foo bar\n      pattern: RegExp(parameterPrefix + /[$\\w\\xA0-\\uFFFF.]+(?=\\s|$)/.source),\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }\n  });\n  Prism.languages.insertBefore('jsdoc', 'keyword', {\n    'optional-parameter': {\n      // @param {string} [baz.foo=\"bar\"] foo bar\n      pattern: RegExp(parameterPrefix + /\\[[$\\w\\xA0-\\uFFFF.]+(?:=[^[\\]]+)?\\](?=\\s|$)/.source),\n      lookbehind: true,\n      inside: {\n        'parameter': {\n          pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\./\n          }\n        },\n        'code': {\n          pattern: /(=)[\\s\\S]*(?=\\]$)/,\n          lookbehind: true,\n          inside: javascript,\n          alias: 'language-javascript'\n        },\n        'punctuation': /[=[\\]]/\n      }\n    },\n    'class-name': [{\n      pattern: RegExp(/(@(?:augments|extends|class|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(/<TYPE>/g, function () {\n        return type;\n      })),\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }, {\n      pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n      lookbehind: true,\n      inside: {\n        'string': javascript.string,\n        'number': javascript.number,\n        'boolean': javascript.boolean,\n        'keyword': Prism.languages.typescript.keyword,\n        'operator': /=>|\\.\\.\\.|[&|?:*]/,\n        'punctuation': /[.,;=<>{}()[\\]]/\n      }\n    }],\n    'example': {\n      pattern: /(@example\\s+)[^@]+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n      lookbehind: true,\n      inside: {\n        'code': {\n          pattern: /^(\\s*(?:\\*\\s*)?).+$/m,\n          lookbehind: true,\n          inside: javascript,\n          alias: 'language-javascript'\n        }\n      }\n    }\n  });\n  Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc);\n})(Prism);"],"sourceRoot":""}