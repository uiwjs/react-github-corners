{"version":3,"sources":["../node_modules/prismjs/components/prism-iecst.min.js"],"names":["Prism","languages","iecst","comment","pattern","lookbehind","greedy","string","keyword","variable","symbol","number","boolean","function","operator","punctuation","type","alias"],"mappings":"iIAAAA,MAAMC,UAAUC,MAAQ,CACtBC,QAAS,CAAC,CACRC,QAAS,gFACTC,YAAY,GACX,CACDD,QAAS,mBACTC,YAAY,EACZC,QAAQ,IAEVC,OAAQ,CACNH,QAAS,iDACTE,QAAQ,GAEV,aAAc,yPACdE,QAAS,qPACTC,SAAU,+HACVC,OAAQ,kCACRC,OAAQ,iIACRC,QAAS,0BACTC,SAAU,YACVC,SAAU,uFACVC,YAAa,QACbC,KAAM,CACJZ,QAAS,IACTa,MAAO","file":"static/js/175.53ec0c5f.chunk.js","sourcesContent":["Prism.languages.iecst = {\n  comment: [{\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\(\\*[\\s\\S]*?(?:\\*\\)|$)|\\{[\\s\\S]*?(?:\\}|$))/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: !0,\n    greedy: !0\n  }],\n  string: {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  \"class-name\": /\\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:GLOBAL|INPUT|PUTPUT|IN_OUT|ACCESS|TEMP|EXTERNAL|CONFIG)|VAR|METHOD|PROPERTY)\\b/i,\n  keyword: /\\b(?:(?:END_)?(?:IF|WHILE|REPEAT|CASE|FOR)|ELSE|FROM|THEN|ELSIF|DO|TO|BY|PRIVATE|PUBLIC|PROTECTED|CONSTANT|RETURN|EXIT|CONTINUE|GOTO|JMP|AT|RETAIN|NON_RETAIN|TASK|WITH|UNTIL|USING|EXTENDS|IMPLEMENTS|GET|SET|__TRY|__CATCH|__FINALLY|__ENDTRY)\\b/,\n  variable: /\\b(?:AT|BOOL|BYTE|(?:D|L)?WORD|U?(?:S|D|L)?INT|L?REAL|TIME(?:_OF_DAY)?|TOD|DT|DATE(?:_AND_TIME)?|STRING|ARRAY|ANY|POINTER)\\b/,\n  symbol: /%[IQM][XBWDL][\\d.]*|%[IQ][\\d.]*/,\n  number: /\\b(?:16#[\\da-f]+|2#[01_]+|0x[\\da-f]+)\\b|\\b(?:T|D|DT|TOD)#[\\d_shmd:]*|\\b[A-Z]*\\#[\\d.,_]*|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  boolean: /\\b(?:TRUE|FALSE|NULL)\\b/,\n  function: /\\w+(?=\\()/,\n  operator: /(?:S?R?:?=>?|&&?|\\*\\*?|<=?|>=?|[-:^/+])|\\b(?:OR|AND|MOD|NOT|XOR|LE|GE|EQ|NE|GE|LT)\\b/,\n  punctuation: /[();]/,\n  type: {\n    pattern: /#/,\n    alias: \"selector\"\n  }\n};"],"sourceRoot":""}