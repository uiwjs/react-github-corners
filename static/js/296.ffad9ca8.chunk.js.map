{"version":3,"sources":["../node_modules/prismjs/components/prism-peoplecode.min.js"],"names":["Prism","languages","peoplecode","comment","RegExp","join","string","pattern","greedy","variable","lookbehind","alias","inside","punctuation","keyword","function","boolean","number","operator","pcode"],"mappings":"iIAAAA,MAAMC,UAAUC,WAAa,CAC3BC,QAASC,OAAO,CAAC,gBAAiB,eAAgB,gEAAiE,iBAAiBC,KAAK,MACzIC,OAAQ,CACNC,QAAS,kDACTC,QAAQ,GAEVC,SAAU,OACV,sBAAuB,CACrBF,QAAS,2CACTG,YAAY,EACZC,MAAO,YAET,aAAc,CACZJ,QAAS,iIACTG,YAAY,EACZE,OAAQ,CACNC,YAAa,MAGjBC,QAAS,gYACT,mBAAoB,CAClBP,QAAS,sBACTI,MAAO,YAETI,SAAU,sBACVC,QAAS,sBACTC,OAAQ,oBACRC,SAAU,8BACVL,YAAa,eACZb,MAAMC,UAAUkB,MAAQnB,MAAMC,UAAUC","file":"static/js/296.ffad9ca8.chunk.js","sourcesContent":["Prism.languages.peoplecode = {\n  comment: RegExp([\"/\\\\*[^]*?\\\\*/\", \"\\\\bREM[^;]*;\", \"<\\\\*(?:[^<*]|\\\\*(?!>)|<(?!\\\\*)|<\\\\*(?:(?!\\\\*>)[^])*\\\\*>)*\\\\*>\", \"/\\\\+[^]*?\\\\+/\"].join(\"|\")),\n  string: {\n    pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n    greedy: !0\n  },\n  variable: /%\\w+/,\n  \"function-definition\": {\n    pattern: /((?:^|[^\\w-])(?:function|method)\\s+)\\w+/i,\n    lookbehind: !0,\n    alias: \"function\"\n  },\n  \"class-name\": {\n    pattern: /((?:^|[^-\\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\\s+)\\w+(?::\\w+)*/i,\n    lookbehind: !0,\n    inside: {\n      punctuation: /:/\n    }\n  },\n  keyword: /\\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|implements|import|instance|if|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\\b/i,\n  \"operator-keyword\": {\n    pattern: /\\b(?:and|not|or)\\b/i,\n    alias: \"operator\"\n  },\n  function: /[_a-z]\\w*(?=\\s*\\()/i,\n  boolean: /\\b(?:false|true)\\b/i,\n  number: /\\b\\d+(?:\\.\\d+)?\\b/,\n  operator: /<>|[<>]=?|!=|\\*\\*|[-+*/|=@]/,\n  punctuation: /[:.;,()[\\]]/\n}, Prism.languages.pcode = Prism.languages.peoplecode;"],"sourceRoot":""}