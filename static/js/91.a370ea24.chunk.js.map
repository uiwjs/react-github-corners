{"version":3,"sources":["../node_modules/prismjs/components/prism-dhall.min.js"],"names":["Prism","languages","dhall","comment","string","pattern","greedy","inside","interpolation","expression","lookbehind","alias","punctuation","label","url","env","function","operator","variable","hash","number","keyword","builtin","boolean"],"mappings":"gIAAAA,MAAMC,UAAUC,MAAQ,CACtBC,QAAS,yEACTC,OAAQ,CACNC,QAAS,4DACTC,QAAQ,EACRC,OAAQ,CACNC,cAAe,CACbH,QAAS,eACTE,OAAQ,CACNE,WAAY,CACVJ,QAAS,wBACTK,YAAY,EACZC,MAAO,iBACPJ,OAAQ,MAEVK,YAAa,cAKrBC,MAAO,CACLR,QAAS,UACTC,QAAQ,GAEVQ,IAAK,CACHT,QAAS,yFACTC,QAAQ,GAEVS,IAAK,CACHV,QAAS,yCACTC,QAAQ,EACRC,OAAQ,CACNS,SAAU,OACVC,SAAU,KACVC,SAAU,YAGdC,KAAM,CACJd,QAAS,4BACTE,OAAQ,CACNS,SAAU,SACVC,SAAU,IACVG,OAAQ,mBAGZC,QAAS,qFACTC,QAAS,oBACTC,QAAS,qBACTH,OAAQ,gFACRH,SAAU,qGACVL,YAAa,qBACb,aAAc,gBACbZ,MAAMC,UAAUC,MAAME,OAAOG,OAAOC,cAAcD,OAAOE,WAAWF,OAASP,MAAMC,UAAUC","file":"static/js/91.a370ea24.chunk.js","sourcesContent":["Prism.languages.dhall = {\n  comment: /--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,\n  string: {\n    pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /\\$\\{[^{}]*\\}/,\n        inside: {\n          expression: {\n            pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n            lookbehind: !0,\n            alias: \"language-dhall\",\n            inside: null\n          },\n          punctuation: /\\$\\{|\\}/\n        }\n      }\n    }\n  },\n  label: {\n    pattern: /`[^`]*`/,\n    greedy: !0\n  },\n  url: {\n    pattern: /\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,\n    greedy: !0\n  },\n  env: {\n    pattern: /\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,\n    greedy: !0,\n    inside: {\n      function: /^env/,\n      operator: /^:/,\n      variable: /[\\s\\S]+/\n    }\n  },\n  hash: {\n    pattern: /\\bsha256:[\\da-fA-F]{64}\\b/,\n    inside: {\n      function: /sha256/,\n      operator: /:/,\n      number: /[\\da-fA-F]{64}/\n    }\n  },\n  keyword: /\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,\n  builtin: /\\b(?:Some|None)\\b/,\n  boolean: /\\b(?:False|True)\\b/,\n  number: /\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,\n  operator: /\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||[!=]=|===|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,\n  punctuation: /\\.\\.|[{}\\[\\](),./]/,\n  \"class-name\": /\\b[A-Z]\\w*\\b/\n}, Prism.languages.dhall.string.inside.interpolation.inside.expression.inside = Prism.languages.dhall;"],"sourceRoot":""}